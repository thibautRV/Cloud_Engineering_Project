version: '3.8'

services:
  api-gateway:
    image: papyrgb/flask-sensor-app:latest
    ports:
      - "5000:5000"
    build:
      context: ./api-gateway
    volumes:
      - ./data_processing_service:/usr/src/app/data_processing_service
    depends_on:
      - database
    environment:
      - DATABASE_URI=postgresql://postgres:datasql78$$@database:5432/NumericFarm
    networks:
      - app-network
    user: "1000:1000"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 500M
    logging:
      driver: json-file
      options:
        max-size: "200k"
        max-file: "10"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  data-processing-service:
    image: papyrgb/data-processing-service:latest
    environment:
      - DATABASE_URI=postgresql://postgres:datasql78$$@database:5432/NumericFarm
    networks:
      - app-network
    user: "1000:1000"
    restart: always

  dashboard:
    image: papyrgb/dashboard-sensor-app:latest
    ports:
      - "3000:80"
    networks:
      - app-network
    user: "1000:1000"
    restart: always

  database:
    image: postgres:13
    environment:
      - POSTGRES_DB=NumericFarm
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=datasql78$$
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=database
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./database:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - app-network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  sensor-simulator:
    image: papyrgb/sensor-simulator:latest
    build: ./sensor-simulator
    environment:
      - API_ENDPOINT=http://api-gateway:5000/api/sensors
      - FREQUENCY_SECONDS=60
      - TEMPERATURE_RANGE=(20, 30)
      - HUMIDITY_RANGE=(30, 60)
    depends_on:
      api-gateway:
        condition: service_healthy
    networks:
      - app-network
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
